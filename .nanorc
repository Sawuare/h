set autoindent
set casesensitive
set nohelp
set nowrap
set smooth


bind ^H help all
bind ^Q exit all

bind ^O insert main
bind ^S savefile main
bind ^W writeout main

bind ^L gotoline main

bind ^F whereis all
bind ^G findnext all
bind ^D findprevious all

bind ^R replace all

bind ^X cut all
bind ^C copy all
bind ^V paste all

bind ^Z undo all
bind ^Y redo all

# Remove these when ^Z works
bind M-Z undo all
bind M-Y redo all

bind M-C comment main

bind M-H nohelp main
bind M-P curpos main
bind M-L linenumbers main
bind M-W whitespacedisplay main


syntax haskell "\.hs$"

comment "--"

# Constructor identifier
color brightcyan "\<([[:upper:]][[:alnum:]']*)\>"

# Module identifier
color brightcyan "\<(([[:upper:]][[:alnum:]']*.)*[[:upper:]][[:alnum:]']*)\>"

# Reserved identifier
color brightmagenta "\<(case|class|data|default|deriving|do|else|foreign|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)\>"

# Reserved operator
color brightyellow "\.\.|:|=|\\|\||<-|->|@|~|=>"

# Character
color cyan "'([^'\]|\\[^&]+)'"
# String
color cyan ""([^"\]|\\.+)*""

# Ordinary comment
color magenta "---*([^!#$%&*+./<=>?@\^|~:].*)?$"
# Nested comment
color magenta start="\{-" end="-}"
# Pragma
color magenta start="\{-#" end="#-}"

# Trailing space
color ,yellow "[[:space:]]+$"
