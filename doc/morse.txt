NAME
  morse - encode arguments into printable adapted International Morse code

SYNOPSIS
  morse <word> ...

DESCRIPTION
  morse regards arguments as words consisting of letters. The following are the valid
  letters.

    a b c d e f g h i j k l m n o p q r s t u v w x y z
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    1 2 3 4 5 6 7 8 9 0
    . , : ? ' - / ( ) " = + @

  For performance, morse does not test for invalid letters and will probably crash if
  any are given.

  morse prints signals consisting of dots and dashes. The following is the adapted
  spacing and length of the signals.

    A dash is equal to a dot.
    The space between the signals forming the same letter is equal to zero.
    The space between two letters is equal to a space.
    The space between two words is equal to a newline.

NOTES
  The following performance observations are based on unoptimized Intel 64 assembly
  generated by Clang 12.0.0.

  Stack space used is 1008 bytes.

  Let w equal the number of words.
  Let l equal the number of letters.

  The following is an operation count table for the main loop.

    -----------------------------------------------------------------------
    Statement                                  | Op Frequency Total op
    -----------------------------------------------------------------------
    while (*++wordv)                           | 7  w + 1     7w + 7
      while (**wordv) {                        | 6  l + w     6l + 6w
        fputs(codev[**wordv], stdout);         | 6  l         6l
        fputc(*++*wordv ? ' ' : '\n', stdout); | 12 l         12l
      }                                        |
    -----------------------------------------------------------------------
    Total                                      | 31           24l + 13w + 7
    -----------------------------------------------------------------------

  The following are the space and time complexities.

    S (w, l) = O(1)
     P

    T (w, l) = O(l)
     P

SEE ALSO
  amorse
