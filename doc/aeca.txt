NAME
  aeca - play audio elementary cellular automata

SYNOPSIS
  aeca [-c <cells>] [-d] [-g <generations>] [-q] [-r <rule>] [-s <seed>]

DESCRIPTION
  aeca generates generations of cells that evolve according to an elementary cellular
  automata rule. The generations are concatenated and converted to a raw audio stream
  consisting of unsigned 8 bit samples. Dead cells become samples with amplitude 0,
  and alive cells become samples with amplitude 255. aeca writes the stream to a file
  and tries to play it as if it has this format:

    Unsigned 8 bit, Rate 44100 Hz, Mono

  aeca does that by invoking the external program "aplay":

    aplay -t raw -f U8 -r 44100 -c 1 <filename>

  Playing and keeping the file is optional. See the -q and -d options.

  Evolutions start from either a fixed state or a random state that is seeded
  manually. The former tend to sound tonal, while the latter tend to sound atonal.
  See the -s option.

  The file has a name that encodes how it was produced. For example, a file with the
  name c256g256r60s0.aeca.pcm can be reproduced by an invocation equivalent to this:

    aeca -c 256 -g 256 -r 60 -s 0

  A file generated from a random state could be irreproducible on different systems
  because of a possibly different implementation of the random number generator used.

OPTIONS
  -c <cells>
    The decimal positive integer <cells> specifies the number of cells in a
    generation.
    Defaults to 256.

  -d
    Delete the file after trying to play it.

  -g <generations>
    The decimal positive integer <generations> specifies the number of generations.
    Defaults to 256.

  -q
    Be quiet by not trying to play the file.

  -r <rule>
    The decimal nonnegative integer <rule> specifies the rule and must be less than
    256.
    Defaults to 60.

  -s <seed>
    The decimal nonnegative integer <seed> specifies the seed used to randomize the
    1st generation. The seed 0 is special; it does not randomize the 1st generation
    but instead places only 1 alive cell in the middle of it.
    Defaults to 0.

EXIT STATUS
  1 if an option is invalid;
  2 if an option argument is invalid;
  3 if allocating a buffer fails;
  4 if opening the file fails;
  5 if the host environment has no command processor;
  0 otherwise;

SEE ALSO
  aplay(1), eca.txt
